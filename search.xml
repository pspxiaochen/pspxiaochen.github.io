<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Hexo博客撰写之：MarkDown语法介绍]]></title>
      <url>/2017/11/18/2017-11-17-test/</url>
      <content type="html"><![CDATA[<p>#前言<br>搭建好了hexo，接下来的就是写博客了， hexo 支持用 markdown 写博客，markdown 语法很简单，本文给出一些基本的 markdown 语法，结合 hexo 教你如何在 hexo 下用 markdown 撰写博客。</p>
<p>#hexo博客头部<br>    hexo 博客的 markdown 头部有固定的格式，如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hexo博客撰写之：MarkDown语法介绍</span><br><span class="line">date: 2017-11-17 09:12:00</span><br><span class="line">categories:</span><br><span class="line">  - 其他</span><br><span class="line">tags:</span><br><span class="line">  - hexo</span><br><span class="line">  - markdown</span><br><span class="line">description: 本文介绍如何在hexo搭建的博客下用markdown写文章,以及一些markdown的基本语法．</span><br><span class="line">photos:</span><br><span class="line">  - https://gss3.bdstatic.com/-Po3dSag_xI4khGkpoWK1HF6hhy/baike/c0%3Dbaike150%2C5%2C5%2C150%2C50/sign=62597ff6ba51f819e5280b18bbdd2188/908fa0ec08fa513d7ddc9503376d55fbb3fbd9fd.jpg</span><br></pre></td></tr></table></figure></p>
<p>顾名思义，我们很容易看懂这个头部信息．<br>我们写新博客的时候只需要复制这些内容，然后对相应的内容进行修改，但不要修改格式．</p>
<p>#hexo博客正文<br>    hexo 博客正文就是正常的 markdown 了，下面就介绍一些基本的 markdown 语法．</p>
<p>##基本的markdown语法</p>
<ul>
<li>标题<br>通过在行首插入 1 到 6 个 # ，来定义 1 到 6 阶 标题：</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">Markdown</th>
<th style="text-align:center">预览</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong># 一级标题</strong></td>
<td style="text-align:center">#一级标题</td>
</tr>
<tr>
<td style="text-align:center"><strong>## 二级标题</strong></td>
<td style="text-align:center">## 二级标题</td>
</tr>
<tr>
<td style="text-align:center"><strong>### 三级标题</strong></td>
<td style="text-align:center">### 三级标题</td>
</tr>
</tbody>
</table>
<ul>
<li><p>段落和换行</p>
<p>  在 Markdown 中段落由一行或者多行文本组成，相邻的两行文字会被视为同一段落，如果存在空行则被视为不同段落( Markdown 对空行的定义是看起来是空行就是空行，即使空行中存在 空格 TAB 回车 等不可见字符，同样会被视为空行)。</p>
</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:left">Markdown</th>
<th style="text-align:left">预览</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">第一行<br>相邻被视为统一段落</td>
<td style="text-align:left">第一行 相邻被视为同一段落</td>
</tr>
<tr>
<td style="text-align:left">第一行[空格][空格]<br>上一行结尾存在两个空格，段内换行</td>
<td style="text-align:left">第一行<br>上一行结尾存在两个空格，段内换行</td>
</tr>
<tr>
<td style="text-align:left">第一行<br><br>两行之间存在空行，视为不同段落。</td>
<td style="text-align:left">第一行<br><br>两行之间存在空行，视为不同段落。</td>
</tr>
</tbody>
</table>
<ul>
<li><p>缩进</p>
<p>输入法中文全角状态下输入两个空格即可实现缩进．输入两个<code>&amp;emsp;</code>或<code>&amp;ensp;</code>也可以实现空格缩进．</p>
</li>
<li><p>强调</p>
</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">Markdown</th>
<th style="text-align:center">预览</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>*倾斜*</code></td>
<td style="text-align:center"><em>倾斜</em></td>
</tr>
<tr>
<td style="text-align:center"><code>**粗体**</code></td>
<td style="text-align:center"><strong>粗体</strong></td>
</tr>
<tr>
<td style="text-align:center"><code>~~删除线~~</code></td>
<td style="text-align:center"><del>删除线</del></td>
</tr>
<tr>
<td style="text-align:center"><code>&gt;引用</code></td>
<td style="text-align:center">&gt;引用</td>
</tr>
</tbody>
</table>
<ul>
<li>连接和图片</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">Markdown</th>
<th style="text-align:center">预览</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><code>[百度一下](http://www.baidu.com)</code></td>
<td style="text-align:center"><a href="http://www.baidu.com" target="_blank" rel="noopener">百度一下</a></td>
</tr>
<tr>
<td style="text-align:center"><code>![joker](https://timgsa.baidu.com/timg?image&amp;quality=80</code><br><code>&amp;size=b9999_10000&amp;sec=1511008391023&amp;di=1ff315398f4671c899</code><br><code>dc706aa34693de&amp;imgtype=0&amp;src=http%3A%2F%2Fimg3.duitang.com%2</code><br><code>Fuploads%2Fi</code><br><code>tem%2F201203%2F17%2F20120317230833_kvzj3.thumb.700_0.jpeg)</code></td>
<td style="text-align:center"><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1511008391023&amp;di=1ff315398f4671c899dc706aa34693de&amp;imgtype=0&amp;src=http%3A%2F%2Fimg3.duitang.com%2Fuploads%2Fitem%2F201203%2F17%2F20120317230833_kvzj3.thumb.700_0.jpeg" alt="joker"></td>
</tr>
</tbody>
</table>
<ul>
<li>音频和视频<br>可以直接使用html的 <audio> 和　<video> 标签嵌入　音频　和　视频．比如以下视频标签：<br><br><br>Markdown:<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> &lt;center&gt;</span><br><span class="line"> &lt;video width=320 height=200      src=<span class="string">'http://tb-video.bdstatic.com/tieba-smallvideo/32_054ab95c5e7edd7a22c913fd1d1d8a5c.mp4'</span>  controls=<span class="string">'controls'</span> &gt; </span><br><span class="line"> 您的浏览器不支持 video 标签。 </span><br><span class="line">&lt;/video&gt;</span><br><span class="line">&lt;/center&gt;</span><br></pre></td></tr></table></figure>
</video></audio></li>
</ul>
<ul>
<li><p>列表</p>
<pre><code>无序列表用 - 引领列表内容，
有序列表用　数字　引领列表内容，
需要指出的是：有序列表的数字即便不按照顺序排列，结果仍是有序的。
</code></pre></li>
</ul>
<ul>
<li>下划线和特殊符号<pre><code>由于 Markdown 使用一些特殊符号进行标记，当我们想要在文档中使用这些特殊符号并防止被 Markdown 转换的时候，可以使用 \ (转义符) 将这些特殊符号进行转义。
</code></pre></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">Markdown</th>
<th style="text-align:center">预览</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">在一行中用三个以上的减号来建立一个分隔线<br>—</td>
<td style="text-align:center">—</td>
</tr>
<tr>
<td style="text-align:center">可以利用反斜杠(转义字符)来插入一些在语法中有特殊意义的符号<br><code>\*Hi\*</code></td>
<td style="text-align:center">*Hi*</td>
</tr>
</tbody>
</table>
<ul>
<li><p>代码</p>
<p>1 行内代码<br>&emsp;行内代码可以使用反引号来标记(反引号一般位于键盘左上角，要用英文．</p>
</li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">Markdown</th>
<th style="text-align:center">预览</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">一句话`行内代码`一句话</td>
<td style="text-align:center">一句话<code>行内代码</code></td>
</tr>
<tr>
<td style="text-align:center">就比如` &lt; video &gt; `标签</td>
<td style="text-align:center">就比如<code>&lt; video &gt;</code>标签</td>
</tr>
</tbody>
</table>
<p>2 多行代码<br>&emsp;多行代码使用 3 个反引号来标记(反引号一般位于键盘左上角，要用英文) ，在第一个 <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">Markdown:</span><br><span class="line">``` javascript</span><br><span class="line">    ```javascript</span><br><span class="line">    // 我是注释</span><br><span class="line">    var a = 5 ;</span><br><span class="line">    console.log(a)</span><br></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">预览：</span><br><span class="line">```javascript</span><br><span class="line">// 我是注释</span><br><span class="line">var a = 5 ;</span><br><span class="line">console.log(a)</span><br></pre></td></tr></table></figure>
<ul>
<li>表格<br><strong>Markdown:</strong></li>
</ul>
<p>| 默认 | 靠右 | 居中 | 靠左 |<br>| —- | —: | :–: | :— |<br>| 内容 | 内容 | 内容 | 内容 |<br>| 内容 | 内容 | 条目 | 内容 |</p>
<p><strong>预览</strong></p>
<table>
<thead>
<tr>
<th>默认</th>
<th style="text-align:right">靠右</th>
<th style="text-align:center">居中</th>
<th style="text-align:left">靠左</th>
</tr>
</thead>
<tbody>
<tr>
<td>内容</td>
<td style="text-align:right">内容</td>
<td style="text-align:center">内容</td>
<td style="text-align:left">内容</td>
</tr>
<tr>
<td>内容</td>
<td style="text-align:right">内容</td>
<td style="text-align:center">条目</td>
<td style="text-align:left">内容</td>
</tr>
</tbody>
</table>
<hr>
<p>OK先到这里,基本语法就是这样，以后如果学到新的好用语法了，我会继续推送的^_^</p>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第一篇post：庆祝博客搭建成功]]></title>
      <url>/2017/11/17/2017-11-20-first-post/</url>
      <content type="html"><![CDATA[<p>&emsp;&emsp;&ensp;我听中文音乐很少，先放一首比较喜欢的中文歌曲… &emsp; 《平凡之路》—朴树</p>
<center><br><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=28815250&auto=0&height=66"></iframe><br><br><br><br></center>

<hr>
<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>&emsp;&emsp;&ensp;一直想搭建自己的博客，但是一直没实践，只怪自己太懒。这次终于下定决心去实践，不过像我等小白来来回回折腾了好几天，本来想省点事直接在github上小改一下，谁知道老是出问题，一提交就收到Page build failure邮件，头疼的我差点放弃，最后狠下心来在本地安装了jekyll，一边调试一边修改，总算调通了，然后push到github，刷新主页，-_-，404找不到页面！妈呀，搜了好久解决办法，最后按照网上说的bundle update升级到了和github一样的最新版，这次报错了：MethedError：not find methed to_liquid for…想了半天，当前’github-pages’包的最新版是155,我把Gemfile中的’github-pages’改成了’github-pages’, ‘~&gt; 154’，也就是从默认的当前最新版本155降到了154,运行bundel exec jekyll serve，完美通过。。。我就郁闷了，原来这个jekyll-next主题已经不适用最新版的github-pages了。那怎么办呢，直接用hexo+next吧，索性静态页面就静态到底吧。</p>
<h1 id="安装node和hexo（基于windows）"><a href="#安装node和hexo（基于windows）" class="headerlink" title="安装node和hexo（基于windows）"></a>安装node和hexo（基于windows）</h1><ul>
<li><p>安装node<br>去nodejs官网下载32或者64位的 node 安装包，然后在Windows下安装 node ，安装完成后，添加 node 到系统 PATH 变量，然后 Win+r 打开运行窗口，输入 cmd 打开命令窗口，然后键入：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br></pre></td></tr></table></figure>
<p>查看node是否已经安装好,再键入</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm -v</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装Hexo<br>这里先安装cnpm，以加快npm包的下载速度：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p>然后，安装hexo</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cnpm install hexo -g</span><br></pre></td></tr></table></figure>
<p>打开cmd命令窗口,键入:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>
<p>查看hexo是否已安装好</p>
</li>
</ul>
<h1 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h1><p>&emsp;&emsp;&ensp;去git for windows下载32或者64位的 git 安装包，然后在Windows下安装 git ，安装完成后，添加 git 到系统 PATH 变量，然后 Win+r 打开运行窗口，输入 cmd 打开命令窗口，然后键入：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git -v</span><br></pre></td></tr></table></figure></p>
<p>查看git是否已经安装好</p>
<h1 id="本地生成SSH-key并添加到github"><a href="#本地生成SSH-key并添加到github" class="headerlink" title="本地生成SSH key并添加到github"></a>本地生成SSH key并添加到github</h1><ul>
<li><p>本地生成ssh key<br>https每次push需要输入用户名和密码，为了以后部署方便，我们使用ssh提交，使用ssh需要配置添加SSH key，具体如下：<br>打开 git bash，输入以下命令:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> ~</span><br><span class="line">$ ssh-keygen -C <span class="string">"your_computer_name"</span></span><br></pre></td></tr></table></figure>
<p>接着会提示输入文件名，默认就行了，Enter<br>再接着会提示你输入两次密码，这个是push时候的密码，我们选择空密码，Enter<br>没问题的话就成功了。</p>
</li>
<li><p>添加ssh key 到github</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ clip &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>然后登录github，进入右上角Account Settings，然后点击菜单栏的SSH key进入页面添加key，<br>点击Add SSH key按钮，把复制的SSH key代码粘贴到key所对应的输入框，点击确认，Title会默认使用你的”your_computer_name”。</p>
</li>
<li><p>测试该SSH key</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure>
<p>出现</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ Hi <span class="string">" your-github-username "</span>! You<span class="string">'ve successfully authenticated, but GitHub does not provide shell access.</span></span><br><span class="line"><span class="string">$ Connection to github.com closed.</span></span><br></pre></td></tr></table></figure>
<p>ok,搞定。</p>
</li>
</ul>
<h1 id="搭建博客"><a href="#搭建博客" class="headerlink" title="搭建博客"></a>搭建博客</h1><ul>
<li><p>新建github pages仓库<br>注册github账号<br>然后新建一个仓库，仓库名称为 your-github-username.github.io，比如我的是pspxiaochen.github.io</p>
</li>
<li><p>搭建博客<br>在本地磁盘新建一个blog文件夹，比如在D盘新建一个blog文件夹，然后进入blog文件夹，执行以下操作：<br>右键打开 git bash，输入以下命令</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> git@github.com:spaceJmmy/spaceJmmy-blog-template</span><br><span class="line">$ <span class="built_in">cd</span> spaceJmmy-blog-template</span><br><span class="line">$ cnpm install</span><br></pre></td></tr></table></figure>
<p>下载完成后,继续输入：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>
<p>如果出现</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000/. Press Ctrl+C to stop</span><br></pre></td></tr></table></figure>
<p>说明启动成功，但是信息还是我的，所以接下来要修改配置博客了。</p>
</li>
</ul>
<h1 id="配置博客"><a href="#配置博客" class="headerlink" title="配置博客"></a>配置博客</h1><h2 id="修改站点配置文件-spaceJmmy-blog-template-config-yml："><a href="#修改站点配置文件-spaceJmmy-blog-template-config-yml：" class="headerlink" title="修改站点配置文件 spaceJmmy-blog-template/_config.yml："></a>修改站点配置文件 spaceJmmy-blog-template/_config.yml：</h2><ul>
<li><p>修改站点信息，将以下内容改成你自己的信息：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line">title: spaceJmmy的博客 <span class="comment">#博客名</span></span><br><span class="line">subtitle: 纯真容易幸福，单纯就易满足 <span class="comment">#博客副标题</span></span><br><span class="line">description: <span class="comment">#给搜索引擎看的，对站点的描述，可以自定义</span></span><br><span class="line">author: spaceJmmy <span class="comment">#作者名称</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>修改站点 URL ，将站点 URL 改成你自己的 URL：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line">url: https://pspxiaochen.github.io</span><br><span class="line">root: /</span><br></pre></td></tr></table></figure>
</li>
<li><p>修改部署备份信息：<br>把两个 git@github.com:spaceJmmy/spaceJmmy.github.io.git 换成成你自己的 repo 地址。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line">deploy: </span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repo: </span><br><span class="line">      github: git@github.com:spaceJmmy/spaceJmmy.github.io.git,master</span><br><span class="line">  message: updated at &#123;&#123; now(<span class="string">"YYYY-MM-DD HH:mm:ss"</span>) &#125;&#125; </span><br><span class="line">backup:</span><br><span class="line">  <span class="built_in">type</span>: git</span><br><span class="line">  repository:</span><br><span class="line">            github: git@github.com:spaceJmmy/spaceJmmy.github.io.git,src</span><br><span class="line">  message: updated at &#123;&#123; now(<span class="string">"YYYY-MM-DD HH:mm:ss"</span>) &#125;&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="修改next主题配置文件-spaceJmmy-blog-template-themes-next-config-yml："><a href="#修改next主题配置文件-spaceJmmy-blog-template-themes-next-config-yml：" class="headerlink" title="修改next主题配置文件 spaceJmmy-blog-template/themes/next/_config.yml："></a>修改next主题配置文件 spaceJmmy-blog-template/themes/next/_config.yml：</h2><ul>
<li>修改 github 社交信息，将我的 GitHub 链接 <a href="https://github.com/spaceJmmy" target="_blank" rel="noopener">https://github.com/spaceJmmy</a> 改成你自己的链接：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  <span class="comment">#LinkLabel: Link</span></span><br><span class="line">  GitHub: https://github.com/spaceJmmy</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="更换站点图标和用户头像："><a href="#更换站点图标和用户头像：" class="headerlink" title="更换站点图标和用户头像："></a>更换站点图标和用户头像：</h2><ul>
<li><p>更换站点图标<br>更换本地文件夹 spaceJmmy-blog-template/themes/next/source 下面的 favicon.ico ，换成你自己的站点图标，文件名不要改变。</p>
</li>
<li><p>更换用户头像<br>更换本地文件夹 spaceJmmy-blog-template/themes/next/source/images 下面的 avatar.gif ，换成你自己的用户头像，文件名不要改变。</p>
</li>
</ul>
<h2 id="修改关于页面："><a href="#修改关于页面：" class="headerlink" title="修改关于页面："></a>修改关于页面：</h2><p>  修改文件夹 spaceJmmy-blog-template/source/about 下的 index.md 文件，改为你自己的 关于 页面。</p>
<h2 id="测试配置是否成功"><a href="#测试配置是否成功" class="headerlink" title="测试配置是否成功"></a>测试配置是否成功</h2><p>  在git bash中输入以下命令：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean </span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure></p>
<p>  浏览器打开 <a href="http://localhost:4000/" target="_blank" rel="noopener">http://localhost:4000/</a> ，如果成功的话，你会发现你的博客已经呈现出你的信息了，吼吼，狂欢吧…… 不过，先别急，先把网站部署备份了再说：</p>
<hr>
<p>  OK，接下来部署备份你的网站，这时候在 bash 终端 Ctrl+C 停止服务器运行，然后输入：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure></p>
<p>  你会发现静态网站已经 push 到你 repo 的 master 分支了。浏览器打开 your-github-username.github.io 就能看到你的博客了，哈哈……<br>  继续，备份博客源码之前需要先删除当前目录下的 .git 文件夹，然后 bash　输入：<br>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo b</span><br></pre></td></tr></table></figure></p>
<p>  你会发现网站源码已经备份到你 repo 的 src 分支了，至此，可以开心的庆祝啦，哈哈。</p>
<hr>
<h2 id="博客以后的常态化管理"><a href="#博客以后的常态化管理" class="headerlink" title="博客以后的常态化管理"></a>博客以后的常态化管理</h2><p>   以后写博客只需要自己写一个 .md 文件，然后放到/source/_posts文件夹下，写好博客后，来个拉风的部署三部曲，呼呼：<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean <span class="comment">#清空缓存</span></span><br><span class="line">$ hexo d <span class="comment">#部署站点到master分支</span></span><br><span class="line">$ hexo b <span class="comment">#备份站点源代码到src分支</span></span><br></pre></td></tr></table></figure></p>
<h2 id="换台电脑重新部署（记得添加新的SSH-key）"><a href="#换台电脑重新部署（记得添加新的SSH-key）" class="headerlink" title="换台电脑重新部署（记得添加新的SSH key）"></a>换台电脑重新部署（记得添加新的SSH key）</h2><p>   得益于前面的工作，换台电脑我们只需要clone仓库的src分支，然后重新生成hexo博客环境来撰写和发布post。<br>   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> -b src git@github.com:your-github-username/your-github-username.github.io.git</span><br><span class="line">$ <span class="built_in">cd</span> your-github-username.github.io</span><br><span class="line">$ cnpm install</span><br></pre></td></tr></table></figure></p>
<p>   hexo环境搭建成功，然后 hexo s 本地预览，添加新的post，再按上述部署三部曲走起，呼呼…<br>   有时 hexo b 会报错，提示执行 git push，那就 git push，你会看到 push 成功，哈哈。</p>
<hr>
<p>&emsp;&emsp;&ensp;至此大功告成，看着自己现在这个博客上线，心里确实美滋滋啊，haha。</p>
<hr>
<p>&emsp;&emsp;&ensp;这个博客的搭建，要感谢很多人…</p>
<ul>
<li>首先感谢github，提供了git pages来托管我们的博客，而且是免费的;</li>
<li>然后要感谢提供主题模板的开源贡献者，使得像我这样的小白能够用上这么高大上的博客;</li>
<li>最后要感谢我自己，能够下定决心克服搭建博客的困难，谁让我是小白呢，慢慢进步。。。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> hexo </tag>
            
            <tag> node </tag>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
